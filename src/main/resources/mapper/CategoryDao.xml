<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhxy.shops.dao.CategoryDao">
    <resultMap id="BaseResultMap" type="com.hhxy.shops.po.Category">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="pid" jdbcType="BIGINT" property="pid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sort" jdbcType="BIGINT" property="sort"/>
    </resultMap>

    <resultMap id="indexList" type="com.hhxy.shops.po.Category">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="pid" jdbcType="BIGINT" property="pid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sort" jdbcType="BIGINT" property="sort"/>
        <collection property="children" column="id" javaType="java.util.ArrayList" ofType="com.hhxy.shops.po.Category"
                    select="getChildren"></collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, pid, `name`, sort
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from category
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAllList" resultType="com.hhxy.shops.po.Category">
        select
        <include refid="Base_Column_List"/>
        from category
        <where>
            <choose>
                <when test="pid == null">pid is null</when>
                <otherwise>pid = #{pid}</otherwise>
            </choose>
        </where>
    </select>
    <select id="selectIndexList" resultType="com.hhxy.shops.po.Category" resultMap="indexList">
        select
        <include refid="Base_Column_List"/>
        from category where pid is null
    </select>
    <select id="getChildren" resultMap="indexList">
        select
        <include refid="Base_Column_List"/>
        from category where
        pid = #{id,jdbcType=BIGINT} order by sort
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from category
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hhxy.shops.po.Category"
            useGeneratedKeys="true">
        insert into category (pid, `name`, sort)
        values (#{pid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{sort,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hhxy.shops.po.Category"
            useGeneratedKeys="true">
        insert into category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                pid,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                #{pid,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hhxy.shops.po.Category">
        update category
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hhxy.shops.po.Category">
        update category
        set pid    = #{pid,jdbcType=BIGINT},
            `name` = #{name,jdbcType=VARCHAR},
            sort   = #{sort,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>